{"version":3,"sources":["components/MainHeader.js","redux/constants.js","pureFunctions/index.js","components/CartItems.js","components/Cart.js","redux/actions.js","components/PizzaMenuItem.js","queries/index.js","components/PizzaMenu.js","components/Toppings.js","components/PizzaDetails.js","components/CustomizePizza.js","components/MainContent.js","ApolloClient.js","redux/cartReducer.js","redux/store.js","index.js","App.js"],"names":["MainHeader","_ref","onToggleCart","react_default","a","createElement","Header","className","Icon","inverted","name","onClick","size","ADD_TO_CART","REMOVE_FROM_CART","firstLetterCapitalized","string","slice","toUpperCase","toLowerCase","formatPrice","num","parseFloat","toFixed","getInitialPrice","basePrice","toppings","reduce","total","topping","price","calculateTotal","cartItems","item","getDefaultToppings","selected","toppingData","defaultSelected","push","toppingIsSelected","selectedToppings","toppingName","some","CartItems","onRemoveCartItemClick","react","map","_ref2","id","List","key","Item","style","cursor","padding","float","textDecoration","_ref3","textAlign","Divider","connect","cart","removeFromCart","data","type","props","_props$cart","margin","dividing","as","length","ev","PizzaMenuItem","_ref$pizza","pizza","maxToppings","Segment","vertical","Button","basic","Link","to","PIZZA_SIZES_QUERY","gql","_templateObject","pizzaSizeByName","pizzaSize","_templateObject2","PizzaMenu","react_apollo_esm","query","loading","error","console","log","pizzaSizes","Toppings","maxToppingsReached","onCheckBoxChange","_ref$topping","Checkbox","defaultChecked","disabled","label","Message","withRouter","addToCart","_props$pizza","defaultToppings","initialTotal","_useState","useState","_useState2","Object","slicedToArray","updateSelectedToppings","_useState3","_useState4","updateTotal","checked","concat","addTopping","filter","removeTopping","history","uuid","CustomizePizza","match","params","indexOf","Redirect","components_PizzaDetails","MainContent","visibleCart","toggleCart","Sidebar","Pushable","animation","direction","icon","visible","width","components_Cart","Pusher","Route","exact","path","component","client","ApolloClient","uri","initialState","reduxDevtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","combineReducers","state","arguments","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.9cf62f1d.chunk.js","sourcesContent":["import React from 'react';\nimport {  Header, Icon } from 'semantic-ui-react';\n\nexport default function MainHeader({ onToggleCart }) {\n    return (\n        <Header className='banner'>\n            <h1>It's Pizza Time</h1>\n            <Icon\n                className='cart-icon'\n                inverted\n                name='shopping cart'\n                onClick={onToggleCart}\n                size='large'\n            />\n        </Header>\n    );\n}\n","export const ADD_TO_CART ='ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n","export const firstLetterCapitalized = string => {\n    return string.slice(0, 1).toUpperCase() + string.slice(1).toLowerCase();\n};\n\nexport const formatPrice = num => {\n    return parseFloat(num.toFixed(2));\n};\n\n// Calculates pizza price including the default selected toppings\nexport const getInitialPrice = (basePrice, toppings) => {\n    return formatPrice(basePrice + toppings.reduce((total, topping) => total + topping.price, 0));\n};\n\nexport const calculateTotal = cartItems => {\n    return formatPrice(cartItems.reduce((total, item) => total + item.total, 0));\n};\n\nexport const getDefaultToppings = toppings => {\n    return toppings.reduce((selected, toppingData) => {\n        const { defaultSelected, topping } = toppingData;\n\n        if (defaultSelected) {\n            selected.push(topping);\n        }\n\n        return selected;\n    }, []);\n};\n\nexport const toppingIsSelected = (selectedToppings, toppingName) => {\n    return selectedToppings.some(({ name }) => name === toppingName);\n};\n","import React, { Fragment } from 'react';\nimport { Icon, List, Divider } from 'semantic-ui-react';\nimport { firstLetterCapitalized } from '../pureFunctions';\n\nexport default function CartItems({ cartItems, total, onRemoveCartItemClick }) {\n    return (\n        <Fragment>\n            {cartItems.map(({ name, total, selectedToppings, id }) => (\n                <List inverted key={id}>\n                    <List.Item>\n                        <Icon\n                            name='close'\n                            onClick={onRemoveCartItemClick}\n                            size='small'\n                            id={id}\n                            style={{ cursor: 'pointer', padding: '15px', float: 'right' }}\n                        />\n                        <h3>{firstLetterCapitalized(name)} pizza</h3>\n                        <h5 style={{textDecoration: 'underline'}}>Toppings</h5>\n                        <List>\n                            {selectedToppings.map(({ name }) => (\n                                <List.Item key={name}>{name}</List.Item>\n                            ))}\n                        </List>\n                        <h5 style={{textAlign: 'right'}}>Total ${total.toFixed(2)}</h5>\n                    </List.Item>\n                    <Divider inverted />\n                </List>\n            ))}\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Icon } from 'semantic-ui-react';\nimport { removeFromCart } from '../redux/actions';\nimport CartItems from './CartItems';\n\nconst Cart = props => {\n    const {\n        cart: { cartItems, total },\n        onToggleCart,\n        removeFromCart\n    } = props;\n    const onRemoveCartItemClick = (ev, data) => {\n        const { id } = data;\n        removeFromCart({ id });\n    };\n\n    return (\n        <div className='cart-content' style={{margin: '1em'}}>\n            <Icon\n                name='close'\n                onClick={onToggleCart}\n                size='large'\n                style={{ cursor: 'pointer' }}\n            />\n            <Header\n                dividing as='h2'\n                inverted\n                textAlign='center'>\n                Cart\n            </Header>\n            {cartItems.length ?\n                <CartItems\n                    cartItems={cartItems}\n                    onRemoveCartItemClick={onRemoveCartItemClick}\n                    total={total}\n                /> :\n                null\n            }\n            <h2 style={{textAlign: 'right'}}>Total ${total.toFixed(2)}</h2>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ cart }) => {\n    return { cart };\n};\n\nexport default connect(mapStateToProps, { removeFromCart })(Cart);\n","import { ADD_TO_CART, REMOVE_FROM_CART } from './constants';\n\nexport const addToCart = data => {\n    return { type: ADD_TO_CART, data };\n};\n\nexport const removeFromCart = data => {\n    return { type: REMOVE_FROM_CART, id: data.id };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Button } from 'semantic-ui-react';\nimport { firstLetterCapitalized } from '../pureFunctions';\n\nexport default function PizzaMenuItem ({ pizza: { name, basePrice, maxToppings } }) {\n    return (\n        <Segment vertical>\n            <h2>{firstLetterCapitalized(name)} Pizza</h2>\n            <p>From ${basePrice}</p>\n            {maxToppings ?\n                <p>Max {maxToppings} toppings</p> :\n                <p>Unlimited toppings</p>\n            }\n            <Button basic as={Link} to={name}>Select</Button>\n        </Segment>\n    );\n}\n","import gql from 'graphql-tag';\n\nexport const PIZZA_SIZES_QUERY = gql`\n    query pizzaSizesQuery {\n        pizzaSizes {\n            name\n            basePrice\n            maxToppings\n        }\n    }\n`;\n\nexport function pizzaSizeByName(pizzaSize) {\n    const PIZZA_SIZES_BY_NAME_QUERY = gql`\n        query pizzaSizeByNameQuery {\n            pizzaSizeByName(name: ${pizzaSize}) {\n                basePrice,\n                name,\n                maxToppings,\n                toppings {\n                    defaultSelected\n                    topping {\n                        name\n                        price\n                    }\n                }\n            }\n        }\n    `;\n\n    return PIZZA_SIZES_BY_NAME_QUERY;\n}\n","import React, { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { Query } from 'react-apollo';\nimport PizzaMenuItem from './PizzaMenuItem';\nimport { PIZZA_SIZES_QUERY } from '../queries';\n\nexport default function PizzaMenu() {\n    return (\n        <div className='pizza-menu-content'>\n            <Header as='h2' textAlign='center'>\n                Choose a Pizza\n            </Header>\n            <hr />\n            <Query query={PIZZA_SIZES_QUERY}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading Pizzas..</h4>;\n                    if (error) console.log(error);\n\n                    return (\n                        <Fragment>\n                            {data.pizzaSizes.map(pizza => (\n                                <PizzaMenuItem pizza={pizza} key={pizza.name} />\n                            ))}\n                        </Fragment>\n                    );\n                }}\n            </Query>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Segment, Checkbox, List, Message } from 'semantic-ui-react';\nimport { toppingIsSelected } from '../pureFunctions';\n\nexport default function Toppings(props) {\n    const {\n        toppings,\n        maxToppingsReached,\n        onCheckBoxChange,\n        selectedToppings\n    } = props;\n\n    return (\n        <Segment vertical>\n            <List>\n                {toppings.map(({ topping: { name, price }, defaultSelected }) => {\n                    const selected = toppingIsSelected(selectedToppings, name);\n\n                    return (\n                        <List.Item key={name}>\n                            <Checkbox\n                                defaultChecked={selected}\n                                disabled={!selected && maxToppingsReached}\n                                label={name}\n                                onClick={onCheckBoxChange}\n                                price={price}\n                            />\n                        </List.Item>\n                    );\n                })}\n            </List>\n            {maxToppingsReached ?\n                <Message>You have reached the max amount of toppings.</Message> :\n                null\n            }\n        </Segment>\n    );\n}\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\nimport { Header, Segment, Button } from 'semantic-ui-react';\nimport Toppings from './Toppings';\nimport { addToCart } from '../redux/actions';\nimport {\n    firstLetterCapitalized,\n    getDefaultToppings,\n    getInitialPrice,\n    formatPrice\n} from '../pureFunctions';\n\nfunction PizzaDetails(props) {\n    const {\n        pizza: {\n            basePrice,\n            maxToppings,\n            name,\n            toppings\n        }\n    } = props;\n    const defaultToppings = getDefaultToppings(toppings);\n    const initialTotal = getInitialPrice(basePrice, defaultToppings);\n    const [ selectedToppings, updateSelectedToppings ] = useState(defaultToppings);\n    const [ total, updateTotal ] = useState(initialTotal);\n    const maxToppingsReached = maxToppings === selectedToppings.length;\n\n    const addTopping = (name, price) => {\n        updateSelectedToppings(selectedToppings.concat({ name, price }));\n        updateTotal(total + price);\n    };\n\n    const removeTopping = (name, price) => {\n        updateSelectedToppings(selectedToppings.filter(topping => topping.name !== name));\n        updateTotal(total - price);\n    };\n\n    const onCheckBoxChange = (ev, data) => {\n        const { checked, label, price } = data;\n\n        if (checked) {\n            addTopping(label, price);\n        } else {\n            removeTopping(label, price);\n        }\n    };\n\n    const onAddToCartClick = () => {\n        const { pizza: { name }, addToCart, history } = props;\n        const id = uuid();\n\n        const pizzaDetails = {\n            name,\n            id,\n            selectedToppings,\n            total: formatPrice(total)\n        };\n\n        addToCart(pizzaDetails);\n        history.push('/');\n    };\n\n    return (\n        <Fragment>\n            <Header as='h2' textAlign='center'>\n                Customize your {firstLetterCapitalized(name)} Pizza\n            </Header>\n            <hr />\n            <Segment vertical>\n                <p>From ${basePrice}</p>\n                {maxToppings ?\n                    <p>Add maximum {maxToppings} toppings</p> :\n                    <p>Hurray! Unlimited toppings</p>\n                }\n            </Segment>\n            <Toppings\n                toppings={toppings}\n                maxToppingsReached={maxToppingsReached}\n                onCheckBoxChange={onCheckBoxChange}\n                selectedToppings={selectedToppings}\n            />\n            <div style={{ textAlign: 'right '}}>\n                <h3>Total price for pizza ${total.toFixed(2)}</h3>\n                <Button basic size='large' onClick={onAddToCartClick}>\n                    Add to cart\n                </Button>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default withRouter(connect(null, { addToCart })(PizzaDetails));\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Query } from 'react-apollo';\nimport PizzaDetails from './PizzaDetails';\nimport { pizzaSizeByName } from '../queries';\n\nexport default function CustomizePizza(props) {\n    const validPizzaSizes = ['SMALL', 'MEDIUM', 'LARGE'];\n    const pizzaSize = props.match.params.pizzaSize.toUpperCase();\n    const invalidSize = validPizzaSizes.indexOf(pizzaSize) < 0;\n\n    // If params is not a valid pizza size, redirect to homepage\n    if (invalidSize) return <Redirect to='/' />;\n\n    return (\n        <div className='pizza-menu-content'>\n            <Link to='/'>Back to menu</Link>\n            <Query query={pizzaSizeByName(pizzaSize)}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading Pizza Details..</h4>;\n                    if (error) console.log(error);\n\n                    return <PizzaDetails pizza={data.pizzaSizeByName} />;\n                }}\n            </Query>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Sidebar } from 'semantic-ui-react'\nimport MainHeader from './MainHeader';\nimport Cart from './Cart';\nimport PizzaMenu from './PizzaMenu';\nimport CustomizePizza from './CustomizePizza';\n\nexport default function MainContent() {\n    const [ visibleCart, toggleCart ] = useState(true);\n    const onToggleCart = () => toggleCart(!visibleCart);\n\n    return (\n        <div className='main-content'>\n            <MainHeader onToggleCart={onToggleCart} />\n            <Sidebar.Pushable>\n                <Sidebar\n                    animation='overlay'\n                    className='cart-sidebar'\n                    direction='right'\n                    icon='labeled'\n                    vertical='true'\n                    visible={visibleCart}\n                    width='wide'\n                >\n                    <Cart onToggleCart={onToggleCart} />\n                </Sidebar>\n                <Sidebar.Pusher>\n                    <Route exact path='/' component={PizzaMenu} />\n                    <Route exact path='/:pizzaSize' component={CustomizePizza} />\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n        </div>\n    );\n}\n","import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://core-graphql.dev.waldo.photos/pizza'\n});\n\nexport default client;\n","import { ADD_TO_CART, REMOVE_FROM_CART } from './constants';\nimport { calculateTotal } from '../pureFunctions';\n\nconst initialState = { cartItems: [], total: 0 };\n\nexport default function pizzaReducer(state = initialState, action) {\n    let cartItems;\n\n    switch(action.type) {\n        case ADD_TO_CART:\n            cartItems = state.cartItems.concat(action.data);\n\n            return {\n                ...state,\n                cartItems,\n                total: calculateTotal(cartItems)\n            };\n        case REMOVE_FROM_CART:\n            cartItems = state.cartItems.filter(({ id }) => id !== action.id);\n\n            return {\n                ...state,\n                cartItems,\n                total: calculateTotal(cartItems)\n            };\n        default:\n            return state;\n    }\n}\n","import { createStore, combineReducers } from 'redux';\nimport cartReducer from './cartReducer';\n\nconst reduxDevtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst reducers = combineReducers({ cart: cartReducer });\nlet store;\n\nif (reduxDevtools) {\n    store = createStore(reducers, reduxDevtools());\n} else {\n    store = createStore(reducers);\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport MainContent from './components/MainContent';\nimport client from './ApolloClient';\nimport store from './redux/store';\nimport 'semantic-ui/dist/semantic.min.css';\nimport './App.css';\n\nexport default function App() {\n\n    // in componentDidMount look for a cart in localstorage\n    // if cart is found add it to redux\n    // add middleware that persits redux store changes to localstorage\n    return (\n        <ApolloProvider client={client}>\n            <Provider store={store}>\n                <BrowserRouter>\n                    <MainContent />\n                </BrowserRouter>\n            </Provider>\n        </ApolloProvider>\n    );\n}\n"],"sourceRoot":""}